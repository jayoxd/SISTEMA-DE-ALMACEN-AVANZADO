<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="EDITAR.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ELIMINAR.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnProductos.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARcAAAA3CAYAAAAmCA5WAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKBSURBVHhe7d2xS1VRHMDx/p4GRcwshwZpbWhpCVoCh6hA
        My3ICiIIGirCoeaIapCItmgoiGhoCWpoCEKIIMp7T+2/PO+VKB7N9+xMfobPdH7vvu3LOfcMd9evn0sB
        8L+JC1CFuABViAtQhbgAVYgLUMWmcfn+o4mFV01MzKc4fC3F2LkUu08DO1VuQG7BsZttPHjRxNdv5XZk
        G8bl2dsm9s2mGDmbH9qu+xNgBzuVYs90itGZFPeet8WGrItLLtGJO23nR8WHAqwystyKI9dTfP7SrGnJ
        mrjksIzPpRictFMBejN+McXHxQ3ikncswgL0K7+PWReX/I7FUQjYjuHpFDced49HnbjkW6H88rY0DNCL
        3JL3n5puXPKVUn7zWxoE6MXAZBtXHrbduOQ763y1VBoE6E0bBy+lblwOXCgNAPRnYPJPXIbOlAcA+tWJ
        S2kBYDvEBahCXIAqxAWoQlyAKsQFqEJcgCrEBahCXIAqxAWoQlyAKsQFqEJcgCrEBahCXIAqxAWoQlyA
        KsQFqEJcgCrEBahCXIAqxAWoohOX/I2R0iJAvzpxGTtXXgToVycuR66XFwH6kb/i2onLrSdNDE79LA4B
        9Ork3T8fov+4uBSjs+UhgF7snUnx9E3TjUt29VEbw9NtcRhgKwYm2zh+u+00ZSUu3380cehq+QcAWzF2
        PsXXb92mrMQle/+pcXME9GX/cjtevmtWerImLtnrD02Mz6UYmnJEAv5tcPkolHcsq8OSrYtLlo9Il++n
        GJ11gwRspI2RsymO3mhXjkKrFePyVy5RvlIamSk9GNiphs6kmJhPsfBq7W5ltU3jAtAvcQGqEBegCnEB
        qhAXoIKl+A3bXkmDkhMnJAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnNuevaCategoria.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAARcAAAA3CAYAAAAmCA5WAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAKdSURBVHhe7d1NS1RRGMDxPpAuJsV8KwiSli3auIo2gYvo
        Q6Qz6rzQ5CJaCAUZ1UroZRG5CqIQWgTpvccrM6YJoyij1v7Jcy9OM8zT4Fx7Vv4Xv9V97pndn3vOWcyF
        37/qAgD/G3EBYIK4ADBBXACYIC4ATBAXACY6xmX/aE8Wd5ZlorogN9cfy6grSW8wBeCc8g3wLbhdeSqv
        dj5L7bCmtsP7Z1yWdr/JiCvKoMtLTzCp/hCA82sgzMuQK8jz2ie1IW1x8SW6u/EifklbEACaDYUFGa/M
        y4+D7ZaWtMTFh2UsKksmzKmLAIBqdUquRQ8lOtjU4+K/WAgLgLT8eUxbXPwZC1shAGcx4GalvP3+b1z8
        rZA/vNWGAaAbo8ctWalXk7j4KyV/8qsNAkA3MkFWsltvkrj4O2ttCADSuB7NJXG5uvZAHQCANDJBLolL
        fzijDgBAWnFctAcAcBbEBYAJ4gLABHEBYIK4ADBBXACYIC4ATBAXACaICwATxAWACeICwARxAWCCuAAw
        QVwAmCAuAEwQFwAmiAsAE8QFgAniAsAEcQFggrgAMEFcAJiI4+L/Y0R7CABpxXEZdSX1IQCkFcdlvDIv
        vav6AAB0y/+LaxyXue0P0hdOq0MA0K17Gy+TuEQHmzLs8uoQAHRjyBXk3e7XJC7e9M+3csnNqsMAcBqZ
        ICt3qs/ipjTisn+0JzfWH6kvAMBpXHElqR3WWuPirdSrcnmtqL4EAJ2MuKJ83Pve6ElLXLwv+6GMRWXp
        C2fUBQCg2cUgF3+xNIfFa4uL57dI97dey7ArqIsBQE8wKYMuL7cqTxpboWZqXE74EvkrJb+AtjiA86n/
        eGczUV2QxZ3ltm6c6BgXAEiLuAAwQVwAmCAuAEwQFwAG6vIHjD7qrQ+4BDcAAAAASUVORK5CYII=
</value>
  </data>
</root>